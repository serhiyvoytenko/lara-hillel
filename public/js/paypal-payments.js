/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/paypal-payments.js":
/*!*****************************************!*\
  !*** ./resources/js/paypal-payments.js ***!
  \*****************************************/
/***/ (() => {

eval("function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar errorsExists = false;\nvar fields = {};\n\nfunction getFields() {\n  return $('#order-form').serializeArray().reduce(function (obj, item) {\n    obj[item.name] = item.value;\n    return obj;\n  }, {});\n}\n\nfunction isEmptyFields() {\n  var fields = getFields();\n\n  for (var _i = 0, _Object$entries = Object.entries(fields); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (value.length < 1) {\n      return true;\n    }\n  }\n\n  return false;\n} //\n// const paypalConfig = {\n//   onInit: function(data, actions) {\n//\n//   },\n// };\n\n\npaypal.Buttons({\n  onInit: function onInit(data, actions) {\n    if (isEmptyFields()) {\n      actions.disable();\n    }\n\n    $(document).on('change', '#order-form', function () {\n      if (!isEmptyFields()) {\n        actions.enable();\n      }\n    });\n  },\n  onClick: function onClick(data, actions) {\n    if (isEmptyFields()) {\n      alert('Fields are empty'); // notification\n    }\n  },\n  createOrder: function createOrder(data, actions) {\n    var errorClass = 'is-invalid';\n    var fields = getFields();\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    }); // console.log(fields);\n\n    return $.ajax({\n      url: '/paypal/order/create',\n      type: 'POST',\n      dataType: 'json',\n      data: JSON.stringify(fields),\n      beforeSend: function beforeSend() {\n        $('.invalid-feedback').remove();\n        $(\".\".concat(errorClass)).removeClass(errorClass);\n      },\n      error: function error(data) {\n        var responseJson = data.responseJSON;\n        console.log('error', responseJson);\n\n        if (typeof responseJson !== 'undefined') {\n          var errorTemplate = \"<span class=\\\"invalid-feedback\\\" role=\\\"alert\\\">\\n                                        <strong>___</strong>\\n                                    </span>\";\n\n          for (var _i2 = 0, _Object$entries2 = Object.entries(responseJson.errors); _i2 < _Object$entries2.length; _i2++) {\n            var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n                field = _Object$entries2$_i[0],\n                message = _Object$entries2$_i[1];\n\n            var $input = $(\"input[name=\\\"\".concat(field, \"\\\"]\"));\n            $input.addClass(errorClass);\n            $input.after(errorTemplate.replace('___', message[0]));\n          }\n        }\n      }\n    }).then(function (order) {\n      console.log(order);\n      return order.vendor_order_id;\n    })[\"catch\"](function (error) {\n      return;\n    });\n  },\n  // Call your server to finalize the transaction\n  onApprove: function onApprove(data, actions) {\n    if (data.hasOwnProperty('orderID')) {\n      return fetch('/paypal/order/' + data.orderID + '/capture', {\n        method: 'post',\n        headers: {\n          'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n          'Accept': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (orderData) {\n        // console.log(orderData);\n        var errorDetail = Array.isArray(orderData.details) && orderData.details[0];\n\n        if (errorDetail && errorDetail.issue === 'INSTRUMENT_DECLINED') {\n          return actions.restart();\n        }\n\n        if (errorDetail) {\n          var iziToastOpts = {\n            title: 'Sorry, your transaction could not be processed.',\n            position: 'topCenter'\n          };\n\n          if (errorDetail.description) {\n            iziToastOpts['message'] = errorDetail.description;\n          }\n\n          iziToast.error(iziToastOpts); // console.log(iziToastOpts);\n\n          return false;\n        } // console.log({\n        //     title: 'Payment process was successfully done!',\n        //     position: 'topCenter',\n        //     onClosing: () => { window.location.href = `/paypal/order/${orderData.id}/thankyou` }\n        // });\n\n\n        iziToast.success({\n          title: 'Payment process was successfully done!',\n          position: 'topCenter',\n          onClosing: function onClosing() {\n            window.location.href = \"/paypal/order/\".concat(orderData.id, \"/thankyou\");\n          }\n        });\n      });\n    }\n  }\n}).render('#paypal-button-container');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYXJhLWhpbGxlbC8uL3Jlc291cmNlcy9qcy9wYXlwYWwtcGF5bWVudHMuanM/NTYxNiJdLCJuYW1lcyI6WyJlcnJvcnNFeGlzdHMiLCJmaWVsZHMiLCJnZXRGaWVsZHMiLCIkIiwic2VyaWFsaXplQXJyYXkiLCJyZWR1Y2UiLCJvYmoiLCJpdGVtIiwibmFtZSIsInZhbHVlIiwiaXNFbXB0eUZpZWxkcyIsIk9iamVjdCIsImVudHJpZXMiLCJrZXkiLCJsZW5ndGgiLCJwYXlwYWwiLCJCdXR0b25zIiwib25Jbml0IiwiZGF0YSIsImFjdGlvbnMiLCJkaXNhYmxlIiwiZG9jdW1lbnQiLCJvbiIsImVuYWJsZSIsIm9uQ2xpY2siLCJhbGVydCIsImNyZWF0ZU9yZGVyIiwiZXJyb3JDbGFzcyIsImFqYXhTZXR1cCIsImhlYWRlcnMiLCJhdHRyIiwiYWpheCIsInVybCIsInR5cGUiLCJkYXRhVHlwZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJiZWZvcmVTZW5kIiwicmVtb3ZlIiwicmVtb3ZlQ2xhc3MiLCJlcnJvciIsInJlc3BvbnNlSnNvbiIsInJlc3BvbnNlSlNPTiIsImNvbnNvbGUiLCJsb2ciLCJlcnJvclRlbXBsYXRlIiwiZXJyb3JzIiwiZmllbGQiLCJtZXNzYWdlIiwiJGlucHV0IiwiYWRkQ2xhc3MiLCJhZnRlciIsInJlcGxhY2UiLCJ0aGVuIiwib3JkZXIiLCJ2ZW5kb3Jfb3JkZXJfaWQiLCJvbkFwcHJvdmUiLCJoYXNPd25Qcm9wZXJ0eSIsImZldGNoIiwib3JkZXJJRCIsIm1ldGhvZCIsInJlcyIsImpzb24iLCJvcmRlckRhdGEiLCJlcnJvckRldGFpbCIsIkFycmF5IiwiaXNBcnJheSIsImRldGFpbHMiLCJpc3N1ZSIsInJlc3RhcnQiLCJpemlUb2FzdE9wdHMiLCJ0aXRsZSIsInBvc2l0aW9uIiwiZGVzY3JpcHRpb24iLCJpemlUb2FzdCIsInN1Y2Nlc3MiLCJvbkNsb3NpbmciLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJp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ZWxkcyA9IHt9O1xuXG5mdW5jdGlvbiBnZXRGaWVsZHMoKSB7XG4gICAgcmV0dXJuICQoJyNvcmRlci1mb3JtJykuc2VyaWFsaXplQXJyYXkoKS5yZWR1Y2UoZnVuY3Rpb24gKG9iaiwgaXRlbSkge1xuICAgICAgICBvYmpbaXRlbS5uYW1lXSA9IGl0ZW0udmFsdWU7XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfSwge30pO1xufVxuXG5mdW5jdGlvbiBpc0VtcHR5RmllbGRzKCkge1xuICAgIGNvbnN0IGZpZWxkcyA9IGdldEZpZWxkcygpO1xuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZmllbGRzKSkge1xuICAgICAgICBpZiAodmFsdWUubGVuZ3RoIDwgMSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLy9cbi8vIGNvbnN0IHBheXBhbENvbmZpZyA9IHtcbi8vICAgb25Jbml0OiBmdW5jdGlvbihkYXRhLCBhY3Rpb25zKSB7XG4vL1xuLy8gICB9LFxuLy8gfTtcbnBheXBhbC5CdXR0b25zKHtcblxuICAgIG9uSW5pdDogZnVuY3Rpb24oZGF0YSwgYWN0aW9ucykge1xuICAgICAgICBpZihpc0VtcHR5RmllbGRzKCkpIHtcbiAgICAgICAgICAgIGFjdGlvbnMuZGlzYWJsZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgJChkb2N1bWVudCkub24oJ2NoYW5nZScsICcjb3JkZXItZm9ybScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYoIWlzRW1wdHlGaWVsZHMoKSkge1xuICAgICAgICAgICAgICAgIGFjdGlvbnMuZW5hYmxlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgb25DbGljazogZnVuY3Rpb24oZGF0YSwgYWN0aW9ucykge1xuICAgICAgICBpZihpc0VtcHR5RmllbGRzKCkpIHtcbiAgICAgICAgICAgIGFsZXJ0KCdGaWVsZHMgYXJlIGVtcHR5Jyk7XG4gICAgICAgICAgICAvLyBub3RpZmljYXRpb25cbiAgICAgICAgfVxuICAgIH0sXG4gICAgY3JlYXRlT3JkZXI6IGZ1bmN0aW9uIChkYXRhLCBhY3Rpb25zKSB7XG4gICAgICAgIGNvbnN0IGVycm9yQ2xhc3MgPSAnaXMtaW52YWxpZCc7XG5cbiAgICAgICAgY29uc3QgZmllbGRzID0gZ2V0RmllbGRzKCk7XG5cbiAgICAgICAgJC5hamF4U2V0dXAoe1xuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdYLUNTUkYtVE9LRU4nOiAkKCdtZXRhW25hbWU9XCJjc3JmLXRva2VuXCJdJykuYXR0cignY29udGVudCcpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhmaWVsZHMpO1xuICAgICAgICByZXR1cm4gJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogJy9wYXlwYWwvb3JkZXIvY3JlYXRlJyxcbiAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShmaWVsZHMpLFxuICAgICAgICAgICAgYmVmb3JlU2VuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJCgnLmludmFsaWQtZmVlZGJhY2snKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAkKGAuJHtlcnJvckNsYXNzfWApLnJlbW92ZUNsYXNzKGVycm9yQ2xhc3MpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VKc29uID0gZGF0YS5yZXNwb25zZUpTT047XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yJywgcmVzcG9uc2VKc29uKTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHJlc3BvbnNlSnNvbiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGVycm9yVGVtcGxhdGUgPSBgPHNwYW4gY2xhc3M9XCJpbnZhbGlkLWZlZWRiYWNrXCIgcm9sZT1cImFsZXJ0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5fX188L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5gO1xuXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IFtmaWVsZCwgbWVzc2FnZV0gb2YgT2JqZWN0LmVudHJpZXMocmVzcG9uc2VKc29uLmVycm9ycykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCAkaW5wdXQgPSAkKGBpbnB1dFtuYW1lPVwiJHtmaWVsZH1cIl1gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC5hZGRDbGFzcyhlcnJvckNsYXNzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC5hZnRlcihlcnJvclRlbXBsYXRlLnJlcGxhY2UoJ19fXycsIG1lc3NhZ2VbMF0pKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkudGhlbihmdW5jdGlvbihvcmRlcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2cob3JkZXIpXG4gICAgICAgICAgICByZXR1cm4gb3JkZXIudmVuZG9yX29yZGVyX2lkO1xuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8gQ2FsbCB5b3VyIHNlcnZlciB0byBmaW5hbGl6ZSB0aGUgdHJhbnNhY3Rpb25cbiAgICBvbkFwcHJvdmU6IGZ1bmN0aW9uIChkYXRhLCBhY3Rpb25zKSB7XG4gICAgICAgIGlmKGRhdGEuaGFzT3duUHJvcGVydHkoJ29yZGVySUQnKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZldGNoKCcvcGF5cGFsL29yZGVyLycgKyBkYXRhLm9yZGVySUQgKyAnL2NhcHR1cmUnLCB7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICAnWC1DU1JGLVRPS0VOJzogJCgnbWV0YVtuYW1lPVwiY3NyZi10b2tlblwiXScpLmF0dHIoJ2NvbnRlbnQnKSxcbiAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAob3JkZXJEYXRhKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhvcmRlckRhdGEpO1xuXG4gICAgICAgICAgICAgICAgdmFyIGVycm9yRGV0YWlsID0gQXJyYXkuaXNBcnJheShvcmRlckRhdGEuZGV0YWlscykgJiYgb3JkZXJEYXRhLmRldGFpbHNbMF07XG5cbiAgICAgICAgICAgICAgICBpZiAoZXJyb3JEZXRhaWwgJiYgZXJyb3JEZXRhaWwuaXNzdWUgPT09ICdJTlNUUlVNRU5UX0RFQ0xJTkVEJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYWN0aW9ucy5yZXN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGVycm9yRGV0YWlsKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBpemlUb2FzdE9wdHMgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ1NvcnJ5LCB5b3VyIHRyYW5zYWN0aW9uIGNvdWxkIG5vdCBiZSBwcm9jZXNzZWQuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wQ2VudGVyJ1xuICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnJvckRldGFpbC5kZXNjcmlwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXppVG9hc3RPcHRzWydtZXNzYWdlJ10gPSBlcnJvckRldGFpbC5kZXNjcmlwdGlvbjtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGl6aVRvYXN0LmVycm9yKGl6aVRvYXN0T3B0cyk7XG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGl6aVRvYXN0T3B0cyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh7XG4gICAgICAgICAgICAgICAgLy8gICAgIHRpdGxlOiAnUGF5bWVudCBwcm9jZXNzIHdhcyBzdWNjZXNzZnVsbHkgZG9uZSEnLFxuICAgICAgICAgICAgICAgIC8vICAgICBwb3NpdGlvbjogJ3RvcENlbnRlcicsXG4gICAgICAgICAgICAgICAgLy8gICAgIG9uQ2xvc2luZzogKCkgPT4geyB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGAvcGF5cGFsL29yZGVyLyR7b3JkZXJEYXRhLmlkfS90aGFua3lvdWAgfVxuICAgICAgICAgICAgICAgIC8vIH0pO1xuICAgICAgICAgICAgICAgIGl6aVRvYXN0LnN1Y2Nlc3Moe1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ1BheW1lbnQgcHJvY2VzcyB3YXMgc3VjY2Vzc2Z1bGx5IGRvbmUhJyxcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3BDZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICBvbkNsb3Npbmc6ICgpID0+IHsgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBgL3BheXBhbC9vcmRlci8ke29yZGVyRGF0YS5pZH0vdGhhbmt5b3VgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG59KS5yZW5kZXIoJyNwYXlwYWwtYnV0dG9uLWNvbnRhaW5lcicpO1xuIl0sImZpbGUiOiIuL3Jlc291cmNlcy9qcy9wYXlwYWwtcGF5bWVudHMuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/paypal-payments.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/paypal-payments.js"]();
/******/ 	
/******/ })()
;